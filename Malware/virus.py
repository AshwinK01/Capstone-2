from flask import Flask, request, jsonify
from vt import Client
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

VIRUSTOTAL_API_KEY = os.getenv("VIRUSTOTAL_API_KEY")

app = Flask(__name__)

@app.route('/classify', methods=['POST'])
def classify():
    # Initialize VirusTotal client
    with Client(VIRUSTOTAL_API_KEY) as vt_client:
        if 'url' in request.form:
            url = request.form['url']
            return classify_url(vt_client, url)
        elif 'file' in request.files:
            file = request.files['file']
            return classify_file(vt_client, file)
        else:
            return jsonify({"error": "No input provided"}), 400

def classify_url(client, url):
    """Classify a URL using VirusTotal API."""
    try:
        url_id = client.url_id(url)
        analysis = client.get_object(f"/urls/{url_id}")
        stats = analysis.last_analysis_stats
        return jsonify({
            "input": url,
            "result": stats,
            "malicious": stats["malicious"],
            "harmless": stats["harmless"],
        })
    except Exception as e:
        return jsonify({"error": f"Failed to classify URL: {str(e)}"}), 500

def classify_file(client, file):
    """Classify a file using VirusTotal API."""
    try:
        # Upload file to VirusTotal
        upload = client.scan_file(file)
        # Retrieve the analysis report
        analysis = client.get_object(f"/files/{upload.id}")
        stats = analysis.last_analysis_stats
        return jsonify({
            "input": file.filename,
            "result": stats,
            "malicious": stats["malicious"],
            "harmless": stats["harmless"],
        })
    except Exception as e:
        return jsonify({"error": f"Failed to classify file: {str(e)}"}), 500

if __name__ == '__main__':
    app.run(debug=True)
